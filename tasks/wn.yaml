---
- name: Update repositories cache and install NFS
  apt:
    name: nfs-common
    update_cache: yes
    cache_valid_time: 3600
  when: "ansible_os_family == 'Debian'"

- name: update repositories cache and install NFS
  yum:
    name: nfs-utils
  when: "ansible_os_family == 'RedHat'"

- name: Ensure rpcbind is running
  service:
    name: rpcbind
    state: started
    enabled: yes

- name: Create a directory if it does not exist
  file:
    path: /etc/kubernetes/pki
    state: directory
    mode: 0755

- name: Create auth data file with an admin user
  copy:
    content: '{{ kube_admin_token }},{{ kube_admin_username }},100,"users,system:masters"'
    dest: /etc/kubernetes/pki/auth
    mode: 0600

- name: Add node to kube cluster with node_name == {{ node_name }}
  command: kubeadm join --node-name {{ node_name }} --token {{ kube_token }} {{ kube_server }}:6443 --discovery-token-unsafe-skip-ca-verification creates=/etc/kubernetes/kubelet.conf
  when: node_name != "AUTO"

- name: Add node to kube cluster with node_name == {{ node_name }}
  command: kubeadm join --token {{ kube_token }} {{ kube_server }}:6443 --discovery-token-unsafe-skip-ca-verification creates=/etc/kubernetes/kubelet.conf
  when: node_name == "AUTO"

- name: Reset iptables to blank slate
  command: "{{ item }}"
  with_items:
    - "iptables -F"
    - "iptables-save"

- name: Add KUBELET_EXTRA_ARGS
  lineinfile:
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    line: 'Environment="KUBELET_EXTRA_ARGS={{ kubelet_extra_args }}"'
    regexp: '^Environment="KUBELET_EXTRA_ARGS'
    insertafter: '\[Service\]'
  notify: restart kubelet
  when: kubelet_extra_args != ''

- name: Restart kubelet and wait for flannel
  when: network_manager == "flannel"
  block:
    # - name: wait 5min for flannel and restart kubelet
    #   block:
    #     - name: wait for flannel and restart kubelet
    #       shell: systemctl daemon-reload; service kubelet restart; sleep 60; service kubelet status > /tmp/kubelet_check.log ; grep "start to sync state" /tmp/kubelet_check.log
    #       register: cmd_result
    #       retries: 20
    #       until: cmd_result.rc == 0
    #   when: network_manager == "flannel"
    - name: Restart kubelet
      ansible.builtin.shell: systemctl daemon-reload; systemctl restart kubelet
      changed_when: false
    - name: Pause for 1 minute
      ansible.builtin.pause:
        minutes: 1
    - name: Check status of kubelet service
      ansible.builtin.command: systemctl status kubelet
      register: kubelet_status
      changed_when: false
      failed_when: (kubelet_status.rc != 0) or ('active (running)' not in kubelet_status.stdout)
      ignore_errors: true
    - name: Show status of kubelet service
      ansible.builtin.debug:
        var: kubelet_status
    - name: Fail if kubelet service is not running
      ansible.builtin.fail:
        msg: kubelet is not running!
      when: kubelet_status is failed

- name: Get hostname
  ansible.builtin.command: hostname
  register: hostname
  changed_when: false

- name: Set node Label (for k8s bug at kubelet restart)
  command: kubectl label --overwrite node {{ hostname.stdout }} {{ nodelabel }}
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  delegate_to: "{{ kube_front_end_ip }}"
  when: nodelabel != ""

- name: Install nfs-common
  apt:
    name: nfs-common
    state: present
